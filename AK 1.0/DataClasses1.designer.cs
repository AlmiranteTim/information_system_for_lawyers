#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AK_1._0
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "Timur")]
    public partial class DataClasses1DataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Определения метода расширяемости
        partial void OnCreated();
        partial void InsertАдвокаты(Адвокаты instance);
        partial void UpdateАдвокаты(Адвокаты instance);
        partial void DeleteАдвокаты(Адвокаты instance);
        partial void InsertДело(Дело instance);
        partial void UpdateДело(Дело instance);
        partial void DeleteДело(Дело instance);
        partial void InsertКлиенты(Клиенты instance);
        partial void UpdateКлиенты(Клиенты instance);
        partial void DeleteКлиенты(Клиенты instance);
        partial void InsertУчетные_записи(Учетные_записи instance);
        partial void UpdateУчетные_записи(Учетные_записи instance);
        partial void DeleteУчетные_записи(Учетные_записи instance);
        #endregion

        public DataClasses1DataContext() :
                base(global::AK_1._0.Properties.Settings.Default.TimurConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Адвокаты> Адвокаты
        {
            get
            {
                return this.GetTable<Адвокаты>();
            }
        }

        public System.Data.Linq.Table<Дело> Дело
        {
            get
            {
                return this.GetTable<Дело>();
            }
        }

        public System.Data.Linq.Table<Клиенты> Клиенты
        {
            get
            {
                return this.GetTable<Клиенты>();
            }
        }

        public System.Data.Linq.Table<Учетные_записи> Учетные_записи
        {
            get
            {
                return this.GetTable<Учетные_записи>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Адвокаты")]
    public partial class Адвокаты : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private decimal _Код_адвоката;

        private string _Имя;

        private string _Фамилия;

        private string _Отчество;

        private System.Nullable<decimal> _Телефон;

        private EntitySet<Дело> _Дело;

        private EntitySet<Учетные_записи> _Учетные_записи;

        #region Определения метода расширяемости
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnКод_адвокатаChanging(decimal value);
        partial void OnКод_адвокатаChanged();
        partial void OnИмяChanging(string value);
        partial void OnИмяChanged();
        partial void OnФамилияChanging(string value);
        partial void OnФамилияChanged();
        partial void OnОтчествоChanging(string value);
        partial void OnОтчествоChanged();
        partial void OnТелефонChanging(System.Nullable<decimal> value);
        partial void OnТелефонChanged();
        #endregion

        public Адвокаты()
        {
            this._Дело = new EntitySet<Дело>(new Action<Дело>(this.attach_Дело), new Action<Дело>(this.detach_Дело));
            this._Учетные_записи = new EntitySet<Учетные_записи>(new Action<Учетные_записи>(this.attach_Учетные_записи), new Action<Учетные_записи>(this.detach_Учетные_записи));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_адвоката", AutoSync = AutoSync.OnInsert, DbType = "Decimal(7,0) NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public decimal Код_адвоката
        {
            get
            {
                return this._Код_адвоката;
            }
            set
            {
                if ((this._Код_адвоката != value))
                {
                    this.OnКод_адвокатаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_адвоката = value;
                    this.SendPropertyChanged("Код_адвоката");
                    this.OnКод_адвокатаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Имя", DbType = "VarChar(15) NOT NULL", CanBeNull = false)]
        public string Имя
        {
            get
            {
                return this._Имя;
            }
            set
            {
                if ((this._Имя != value))
                {
                    this.OnИмяChanging(value);
                    this.SendPropertyChanging();
                    this._Имя = value;
                    this.SendPropertyChanged("Имя");
                    this.OnИмяChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Фамилия", DbType = "VarChar(15) NOT NULL", CanBeNull = false)]
        public string Фамилия
        {
            get
            {
                return this._Фамилия;
            }
            set
            {
                if ((this._Фамилия != value))
                {
                    this.OnФамилияChanging(value);
                    this.SendPropertyChanging();
                    this._Фамилия = value;
                    this.SendPropertyChanged("Фамилия");
                    this.OnФамилияChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Отчество", DbType = "VarChar(15)")]
        public string Отчество
        {
            get
            {
                return this._Отчество;
            }
            set
            {
                if ((this._Отчество != value))
                {
                    this.OnОтчествоChanging(value);
                    this.SendPropertyChanging();
                    this._Отчество = value;
                    this.SendPropertyChanged("Отчество");
                    this.OnОтчествоChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Телефон", DbType = "Decimal(10,0)")]
        public System.Nullable<decimal> Телефон
        {
            get
            {
                return this._Телефон;
            }
            set
            {
                if ((this._Телефон != value))
                {
                    this.OnТелефонChanging(value);
                    this.SendPropertyChanging();
                    this._Телефон = value;
                    this.SendPropertyChanged("Телефон");
                    this.OnТелефонChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Адвокаты_Дело", Storage = "_Дело", ThisKey = "Код_адвоката", OtherKey = "Код_адвоката")]
        public EntitySet<Дело> Дело
        {
            get
            {
                return this._Дело;
            }
            set
            {
                this._Дело.Assign(value);
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Адвокаты_Учетные_записи", Storage = "_Учетные_записи", ThisKey = "Код_адвоката", OtherKey = "Код_адвоката")]
        public EntitySet<Учетные_записи> Учетные_записи
        {
            get
            {
                return this._Учетные_записи;
            }
            set
            {
                this._Учетные_записи.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Дело(Дело entity)
        {
            this.SendPropertyChanging();
            entity.Адвокаты = this;
        }

        private void detach_Дело(Дело entity)
        {
            this.SendPropertyChanging();
            entity.Адвокаты = null;
        }

        private void attach_Учетные_записи(Учетные_записи entity)
        {
            this.SendPropertyChanging();
            entity.Адвокаты = this;
        }

        private void detach_Учетные_записи(Учетные_записи entity)
        {
            this.SendPropertyChanging();
            entity.Адвокаты = null;
        }
        protected internal bool Adv(System.Windows.Forms.DataGridView x, System.Windows.Forms.TextBox x1,
            System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4)
        {
            bool vh = false;
            bool result;
            result = true;
            DataClasses1DataContext db = new DataClasses1DataContext();
            Адвокаты d = new Адвокаты();

            decimal tel = Convert.ToDecimal(x4.Text);
            var log = from st in db.Адвокаты
                      select new
                      {
                          st.Телефон,
                      };
            foreach (var z in log)
            {
                if (tel == z.Телефон)
                {
                    vh = false;
                    result = false;
                    break;
                }
                else
                {
                    vh = true;
                }
            }
            if (vh)
            {
                Адвокаты cust = new Адвокаты
                                 {
                                     Имя = x1.Text,
                                     Фамилия = x2.Text,
                                     Отчество = x3.Text,
                                     Телефон = Convert.ToDecimal(x4.Text)
                                 };

                db.Адвокаты.InsertOnSubmit(cust);
                db.SubmitChanges();
                x.DataSource = from st in db.Адвокаты

                               select new
                               {
                                   st.Код_адвоката,
                                   st.Имя,
                                   st.Фамилия,
                                   st.Отчество,
                                   st.Телефон
                               };
            }
            else
            {
                vh = false;
            }
            return result;
        }
        protected internal bool AdvDel(System.Windows.Forms.DataGridView x, decimal numericUpDown1)
        {
            bool result;
            DataClasses1DataContext db = new DataClasses1DataContext();
            try
            {
                Адвокаты cust = (from c in db.Адвокаты
                                 where c.Код_адвоката == numericUpDown1
                                 select c).Single<Адвокаты>();
                db.Адвокаты.DeleteOnSubmit(cust);
                result = true;
            }
            catch (Exception)
            {
                result = false;
            }
            db.SubmitChanges();
            x.DataSource = from st in db.Адвокаты
                           select new
                           {
                               st.Код_адвоката,
                               st.Имя,
                               st.Фамилия,
                               st.Отчество,
                               st.Телефон
                           };
            return result;
        }
        protected internal bool AdvRedVB(System.Windows.Forms.DataGridView x, decimal numericUpDown2, System.Windows.Forms.TextBox x1,
             System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result;
            try
            {
                result = true;
                Адвокаты adv = (from ss in db.Адвокаты
                                where ss.Код_адвоката == numericUpDown2
                                select ss).Single();

                x1.Text = adv.Имя;
                x2.Text = adv.Фамилия;
                x3.Text = adv.Отчество;
                x4.Text = adv.Телефон.ToString();
            }
            catch (Exception)
            {
                result = false;
            }

            return result;
        }
        protected internal bool AdvRed(System.Windows.Forms.DataGridView x, decimal numericUpDown2, System.Windows.Forms.TextBox x1,
             System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4)
        {
            bool result;
            try
            {
                DataClasses1DataContext db = new DataClasses1DataContext();
                Адвокаты adv = (from ss in db.Адвокаты
                                where ss.Код_адвоката == numericUpDown2
                                select ss).Single();
                adv.Имя = x1.Text;
                adv.Фамилия = x2.Text;
                adv.Отчество = x3.Text;
                adv.Телефон = Convert.ToDecimal(x4.Text);
                result = true;
                db.SubmitChanges();
                x.DataSource = from st in db.Адвокаты

                               select new
                               {
                                   st.Код_адвоката,
                                   st.Имя,
                                   st.Фамилия,
                                   st.Отчество,
                                   st.Телефон
                               };
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        public void Deal22(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();

            x.DataSource  = from st in db.Адвокаты

                                                      select new
                                                      {
                                                          st.Код_адвоката,
                                                          st.Имя,
                                                          st.Фамилия,
                                                          st.Отчество,
                                                          st.Телефон
                                                      };
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Дело")]
    public partial class Дело : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private decimal _Код_дела;

        private System.DateTime _Дата_начала;

        private System.Nullable<System.DateTime> _Дата_завершения;

        private decimal _Код_клиента;

        private decimal _Код_адвоката;

        private decimal _Статья;

        private System.Nullable<decimal> _Гонорар;

        private string _Статус_дела;

        private EntityRef<Адвокаты> _Адвокаты;

        private EntityRef<Клиенты> _Клиенты;

        #region Определения метода расширяемости
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnКод_делаChanging(decimal value);
        partial void OnКод_делаChanged();
        partial void OnДата_началаChanging(System.DateTime value);
        partial void OnДата_началаChanged();
        partial void OnДата_завершенияChanging(System.Nullable<System.DateTime> value);
        partial void OnДата_завершенияChanged();
        partial void OnКод_клиентаChanging(decimal value);
        partial void OnКод_клиентаChanged();
        partial void OnКод_адвокатаChanging(decimal value);
        partial void OnКод_адвокатаChanged();
        partial void OnСтатьяChanging(decimal value);
        partial void OnСтатьяChanged();
        partial void OnГонорарChanging(System.Nullable<decimal> value);
        partial void OnГонорарChanged();
        partial void OnСтатус_делаChanging(string value);
        partial void OnСтатус_делаChanged();
        #endregion

        public Дело()
        {
            this._Адвокаты = default(EntityRef<Адвокаты>);
            this._Клиенты = default(EntityRef<Клиенты>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_дела", AutoSync = AutoSync.OnInsert, DbType = "Decimal(7,0) NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public decimal Код_дела
        {
            get
            {
                return this._Код_дела;
            }
            set
            {
                if ((this._Код_дела != value))
                {
                    this.OnКод_делаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_дела = value;
                    this.SendPropertyChanged("Код_дела");
                    this.OnКод_делаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Дата_начала", DbType = "DateTime NOT NULL")]
        public System.DateTime Дата_начала
        {
            get
            {
                return this._Дата_начала;
            }
            set
            {
                if ((this._Дата_начала != value))
                {
                    this.OnДата_началаChanging(value);
                    this.SendPropertyChanging();
                    this._Дата_начала = value;
                    this.SendPropertyChanged("Дата_начала");
                    this.OnДата_началаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Дата_завершения", DbType = "DateTime")]
        public System.Nullable<System.DateTime> Дата_завершения
        {
            get
            {
                return this._Дата_завершения;
            }
            set
            {
                if ((this._Дата_завершения != value))
                {
                    this.OnДата_завершенияChanging(value);
                    this.SendPropertyChanging();
                    this._Дата_завершения = value;
                    this.SendPropertyChanged("Дата_завершения");
                    this.OnДата_завершенияChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_клиента", DbType = "Decimal(7,0) NOT NULL")]
        public decimal Код_клиента
        {
            get
            {
                return this._Код_клиента;
            }
            set
            {
                if ((this._Код_клиента != value))
                {
                    if (this._Клиенты.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnКод_клиентаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_клиента = value;
                    this.SendPropertyChanged("Код_клиента");
                    this.OnКод_клиентаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_адвоката", DbType = "Decimal(7,0) NOT NULL")]
        public decimal Код_адвоката
        {
            get
            {
                return this._Код_адвоката;
            }
            set
            {
                if ((this._Код_адвоката != value))
                {
                    if (this._Адвокаты.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnКод_адвокатаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_адвоката = value;
                    this.SendPropertyChanged("Код_адвоката");
                    this.OnКод_адвокатаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Статья", DbType = "Decimal(15,0) NOT NULL")]
        public decimal Статья
        {
            get
            {
                return this._Статья;
            }
            set
            {
                if ((this._Статья != value))
                {
                    this.OnСтатьяChanging(value);
                    this.SendPropertyChanging();
                    this._Статья = value;
                    this.SendPropertyChanged("Статья");
                    this.OnСтатьяChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Гонорар", DbType = "Decimal(6,0)")]
        public System.Nullable<decimal> Гонорар
        {
            get
            {
                return this._Гонорар;
            }
            set
            {
                if ((this._Гонорар != value))
                {
                    this.OnГонорарChanging(value);
                    this.SendPropertyChanging();
                    this._Гонорар = value;
                    this.SendPropertyChanged("Гонорар");
                    this.OnГонорарChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Статус_дела", DbType = "VarChar(20) NOT NULL", CanBeNull = false)]
        public string Статус_дела
        {
            get
            {
                return this._Статус_дела;
            }
            set
            {
                if ((this._Статус_дела != value))
                {
                    this.OnСтатус_делаChanging(value);
                    this.SendPropertyChanging();
                    this._Статус_дела = value;
                    this.SendPropertyChanged("Статус_дела");
                    this.OnСтатус_делаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Адвокаты_Дело", Storage = "_Адвокаты", ThisKey = "Код_адвоката", OtherKey = "Код_адвоката", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public Адвокаты Адвокаты
        {
            get
            {
                return this._Адвокаты.Entity;
            }
            set
            {
                Адвокаты previousValue = this._Адвокаты.Entity;
                if (((previousValue != value)
                            || (this._Адвокаты.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Адвокаты.Entity = null;
                        previousValue.Дело.Remove(this);
                    }
                    this._Адвокаты.Entity = value;
                    if ((value != null))
                    {
                        value.Дело.Add(this);
                        this._Код_адвоката = value.Код_адвоката;
                    }
                    else
                    {
                        this._Код_адвоката = default(decimal);
                    }
                    this.SendPropertyChanged("Адвокаты");
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Клиенты_Дело", Storage = "_Клиенты", ThisKey = "Код_клиента", OtherKey = "Код_клиента", IsForeignKey = true, DeleteOnNull = true, DeleteRule = "CASCADE")]
        public Клиенты Клиенты
        {
            get
            {
                return this._Клиенты.Entity;
            }
            set
            {
                Клиенты previousValue = this._Клиенты.Entity;
                if (((previousValue != value)
                            || (this._Клиенты.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Клиенты.Entity = null;
                        previousValue.Дело.Remove(this);
                    }
                    this._Клиенты.Entity = value;
                    if ((value != null))
                    {
                        value.Дело.Add(this);
                        this._Код_клиента = value.Код_клиента;
                    }
                    else
                    {
                        this._Код_клиента = default(decimal);
                    }
                    this.SendPropertyChanged("Клиенты");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        public void Search(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            x.DataSource = from Дело in db.Дело
                           join Адвокаты in db.Адвокаты
                           on Дело.Код_адвоката equals Адвокаты.Код_адвоката
                           join Клиенты in db.Клиенты
                           on Дело.Код_клиента equals Клиенты.Код_клиента
                           where Дело.Код_адвоката == CurrentUser.Value
                           select new
                           {
                               Дело.Код_дела,
                               Дело.Дата_начала,
                               Дело.Дата_завершения,
                               ФИО_Клиента = Клиенты.Имя + " " +
                              Клиенты.Фамилия[0] + ". "
                              + Клиенты.Отчество[0] + ".",
                               Дело.Код_адвоката,
                               Дело.Статья,
                               Дело.Гонорар,
                               Дело.Статус_дела
                           };
        }
        public void Search1(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            x.DataSource = from Клиенты in db.Клиенты
                           join Дело in db.Дело on Клиенты.Код_клиента equals Дело.Код_клиента
                           join Адвокаты in db.Адвокаты on Дело.Код_адвоката equals Адвокаты.Код_адвоката
                           where Дело.Код_адвоката == CurrentUser.Value
                           select new
                           {
                               Клиенты.Код_клиента,
                               Клиенты.Фамилия,
                               Клиенты.Имя,
                               Клиенты.Отчество,
                               Клиенты.Телефон,
                               Клиенты.Серия_паспорта,
                               Клиенты.Номер_паспорта,
                           };
        }
        public void Search2(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            x.DataSource = from Дело in db.Дело
                           join Адвокаты in db.Адвокаты
                           on Дело.Код_адвоката equals Адвокаты.Код_адвоката
                           join Клиенты in db.Клиенты
                           on Дело.Код_клиента equals Клиенты.Код_клиента
                           where Дело.Код_адвоката == CurrentUser.Value
                           where Дело.Статус_дела == "Закрыто"
                           select new
                           {
                               Дело.Код_дела,
                               Дело.Дата_начала,
                               Дело.Дата_завершения,
                               ФИО_Клиента = Клиенты.Имя + " " +
                               Клиенты.Фамилия[0] + ". "
                               + Клиенты.Отчество[0] + ".",
                               Дело.Код_адвоката,
                               Дело.Статья,
                               Дело.Гонорар,
                               Дело.Статус_дела
                           };
        }
        public void Search3(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            x.DataSource = from Дело in db.Дело
                           join Адвокаты in db.Адвокаты
                           on Дело.Код_адвоката equals Адвокаты.Код_адвоката
                           join Клиенты in db.Клиенты
                          on Дело.Код_клиента equals Клиенты.Код_клиента
                           where Дело.Код_адвоката == CurrentUser.Value
                           where Дело.Статус_дела == "Открыто"
                           select new
                           {
                               Дело.Код_дела,
                               Дело.Дата_начала,
                               Дело.Дата_завершения,
                               ФИО_Клиента = Клиенты.Имя + " " +
                               Клиенты.Фамилия[0] + ". "
                               + Клиенты.Отчество[0] + ".",
                               Дело.Код_адвоката,
                               Дело.Статья,
                               Дело.Гонорар,
                               Дело.Статус_дела
                           };
        }
        public void Deal(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();

            x.DataSource = from Дело in db.Дело
                           join Клиенты in db.Клиенты
      on Дело.Код_клиента equals Клиенты.Код_клиента
                           select new
                           {
                               Дело.Код_дела,
                               Дело.Дата_начала,
                               Дело.Дата_завершения,
                               ФИО_Клиента = Клиенты.Имя + " " +
                               Клиенты.Фамилия[0] + ". "
                               + Клиенты.Отчество[0] + ".",
                               Дело.Код_адвоката,
                               Дело.Статья,
                               Дело.Гонорар,
                               Дело.Статус_дела
                           };
        }

        protected internal bool Deal1(System.Windows.Forms.DataGridView x, decimal numericUpDown4, string textBox1)
        {
            bool result;
            DataClasses1DataContext db = new DataClasses1DataContext();
            try
            {
                Дело deal = (from ss in db.Дело
                             where ss.Код_дела == numericUpDown4
                             select ss).Single();
                deal.Дата_завершения = DateTime.Today;
                deal.Гонорар = Convert.ToInt32(textBox1);
                deal.Статус_дела = "Закрыто";
                db.SubmitChanges();
                result = true;
                x.DataSource = from Дело in db.Дело
                                           join Клиенты in db.Клиенты
                                            on Дело.Код_клиента equals Клиенты.Код_клиента
                                           select new
                                           {
                                               Дело.Код_дела,
                                               Дело.Дата_начала,
                                               Дело.Дата_завершения,
                                               ФИО_Клиента = Клиенты.Имя + " " + Клиенты.Фамилия[0] + ". "
                                               + Клиенты.Отчество[0] + ".",
                                               Дело.Код_адвоката,
                                               Дело.Статья,
                                               Дело.Гонорар,
                                               Дело.Статус_дела
                                           };
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }

        protected internal bool Deal1_1(decimal numericUpDown4, System.Windows.Forms.TextBox x, System.Windows.Forms.TextBox y)
        {
            bool result;
            DataClasses1DataContext db = new DataClasses1DataContext();

            Дело deal = new Дело();
            {
                try
                {
                    deal = (from ss in db.Дело
                            where ss.Код_дела == numericUpDown4
                            select ss).Single();

                    x.Text = deal.Гонорар.ToString();
                    y.Text = deal.Статус_дела;
                    result = true;

                }
                catch (Exception)
                {
                    result = false;
                }
            }
            return result;
        }
        protected internal bool DealCreate(System.Windows.Forms.DataGridView x, decimal numericUpDown1, decimal numericUpDown2, decimal numericUpDown3)
        {
            bool result;
            DataClasses1DataContext db = new DataClasses1DataContext();


            Дело cust =
                  new Дело
                  {

                      Дата_начала = DateTime.Today,
                      Код_адвоката = numericUpDown1,
                      Код_клиента = numericUpDown2,
                      Статья = numericUpDown3,
                      Статус_дела = "Открыто"

                  };
            db.Дело.InsertOnSubmit(cust);



            try
            {
                db.SubmitChanges();
                result = true;

            }
            catch (Exception)
            {
                result = false;
            }


            x.DataSource = from Дело in db.Дело
                           join Клиенты in db.Клиенты
 on Дело.Код_клиента equals Клиенты.Код_клиента
                           select new
                           {
                               Дело.Код_дела,
                               Дело.Дата_начала,
                               Дело.Дата_завершения,
                               ФИО_Клиента = Клиенты.Имя + " " + Клиенты.Фамилия[0] + ". "
+ Клиенты.Отчество[0] + ".",
                               Дело.Код_адвоката,
                               Дело.Статья,
                               Дело.Гонорар,
                               Дело.Статус_дела
                           };

            return result;
        }
    }
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Клиенты")]
    public partial class Клиенты : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private decimal _Код_клиента;

        private string _Фамилия;

        private string _Имя;

        private string _Отчество;

        private System.Nullable<decimal> _Телефон;

        private decimal _Серия_паспорта;

        private decimal _Номер_паспорта;

        private EntitySet<Дело> _Дело;

        #region Определения метода расширяемости
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnКод_клиентаChanging(decimal value);
        partial void OnКод_клиентаChanged();
        partial void OnФамилияChanging(string value);
        partial void OnФамилияChanged();
        partial void OnИмяChanging(string value);
        partial void OnИмяChanged();
        partial void OnОтчествоChanging(string value);
        partial void OnОтчествоChanged();
        partial void OnТелефонChanging(System.Nullable<decimal> value);
        partial void OnТелефонChanged();
        partial void OnСерия_паспортаChanging(decimal value);
        partial void OnСерия_паспортаChanged();
        partial void OnНомер_паспортаChanging(decimal value);
        partial void OnНомер_паспортаChanged();
        #endregion

        public Клиенты()
        {
            this._Дело = new EntitySet<Дело>(new Action<Дело>(this.attach_Дело), new Action<Дело>(this.detach_Дело));
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_клиента", AutoSync = AutoSync.OnInsert, DbType = "Decimal(7,0) NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public decimal Код_клиента
        {
            get
            {
                return this._Код_клиента;
            }
            set
            {
                if ((this._Код_клиента != value))
                {
                    this.OnКод_клиентаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_клиента = value;
                    this.SendPropertyChanged("Код_клиента");
                    this.OnКод_клиентаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Фамилия", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string Фамилия
        {
            get
            {
                return this._Фамилия;
            }
            set
            {
                if ((this._Фамилия != value))
                {
                    this.OnФамилияChanging(value);
                    this.SendPropertyChanging();
                    this._Фамилия = value;
                    this.SendPropertyChanged("Фамилия");
                    this.OnФамилияChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Имя", DbType = "VarChar(30) NOT NULL", CanBeNull = false)]
        public string Имя
        {
            get
            {
                return this._Имя;
            }
            set
            {
                if ((this._Имя != value))
                {
                    this.OnИмяChanging(value);
                    this.SendPropertyChanging();
                    this._Имя = value;
                    this.SendPropertyChanged("Имя");
                    this.OnИмяChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Отчество", DbType = "VarChar(30)")]
        public string Отчество
        {
            get
            {
                return this._Отчество;
            }
            set
            {
                if ((this._Отчество != value))
                {
                    this.OnОтчествоChanging(value);
                    this.SendPropertyChanging();
                    this._Отчество = value;
                    this.SendPropertyChanged("Отчество");
                    this.OnОтчествоChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Телефон", DbType = "Decimal(18,0)")]
        public System.Nullable<decimal> Телефон
        {
            get
            {
                return this._Телефон;
            }
            set
            {
                if ((this._Телефон != value))
                {
                    this.OnТелефонChanging(value);
                    this.SendPropertyChanging();
                    this._Телефон = value;
                    this.SendPropertyChanged("Телефон");
                    this.OnТелефонChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Серия_паспорта", DbType = "Decimal(4,0) NOT NULL")]
        public decimal Серия_паспорта
        {
            get
            {
                return this._Серия_паспорта;
            }
            set
            {
                if ((this._Серия_паспорта != value))
                {
                    this.OnСерия_паспортаChanging(value);
                    this.SendPropertyChanging();
                    this._Серия_паспорта = value;
                    this.SendPropertyChanged("Серия_паспорта");
                    this.OnСерия_паспортаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Номер_паспорта", DbType = "Decimal(6,0) NOT NULL")]
        public decimal Номер_паспорта
        {
            get
            {
                return this._Номер_паспорта;
            }
            set
            {
                if ((this._Номер_паспорта != value))
                {
                    this.OnНомер_паспортаChanging(value);
                    this.SendPropertyChanging();
                    this._Номер_паспорта = value;
                    this.SendPropertyChanged("Номер_паспорта");
                    this.OnНомер_паспортаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Клиенты_Дело", Storage = "_Дело", ThisKey = "Код_клиента", OtherKey = "Код_клиента")]
        public EntitySet<Дело> Дело
        {
            get
            {
                return this._Дело;
            }
            set
            {
                this._Дело.Assign(value);
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        private void attach_Дело(Дело entity)
        {
            this.SendPropertyChanging();
            entity.Клиенты = this;
        }

        private void detach_Дело(Дело entity)
        {
            this.SendPropertyChanging();
            entity.Клиенты = null;
        }
        protected internal bool Cli(System.Windows.Forms.DataGridView x, System.Windows.Forms.TextBox x1,
            System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4,
             System.Windows.Forms.TextBox x5, System.Windows.Forms.TextBox x6)
        {
            bool vh = false;
            bool result;
            result = true;
            DataClasses1DataContext db = new DataClasses1DataContext();
            Клиенты d = new Клиенты();

            decimal tel = Convert.ToDecimal(x4.Text);
            var log = from st in db.Клиенты
                      select new
                      {
                          st.Телефон,
                      };
            foreach (var z in log)
            {
                if (tel == z.Телефон)
                {
                    vh = false;
                    result = false;
                    break;
                }
                else
                {
                    vh = true;
                }
            }
            if (vh)
            {
                Клиенты cust =
                                 new Клиенты
                                 {

                                     Имя = x1.Text,
                                     Фамилия = x2.Text,
                                     Отчество = x3.Text,
                                     Телефон = Convert.ToDecimal(x4.Text),
                                     Серия_паспорта = Convert.ToDecimal(x5.Text),
                                     Номер_паспорта = Convert.ToDecimal(x6.Text)

                                 };

                db.Клиенты.InsertOnSubmit(cust);
                db.SubmitChanges();
                x.DataSource = from st in db.Клиенты

                               select new
                               {
                                   st.Код_клиента,
                                   st.Имя,
                                   st.Фамилия,
                                   st.Отчество,
                                   st.Телефон,
                                   st.Серия_паспорта,
                                   st.Номер_паспорта,
                               };

            }
            else
            {
                vh = false;
            }
            return result;
        }
        protected internal bool CliDel(System.Windows.Forms.DataGridView x, decimal numericUpDown2)
        {
            bool result;


            DataClasses1DataContext db = new DataClasses1DataContext();
            try
            {
                Клиенты cust = (from c in db.Клиенты
                                where c.Код_клиента == numericUpDown2
                                select c).Single<Клиенты>();
                db.Клиенты.DeleteOnSubmit(cust);
                result = true;

            }
            catch (Exception)
            {
                result = false;
            }
            db.SubmitChanges();

            x.DataSource = from st in db.Клиенты
                           select new
                           {
                               st.Код_клиента,
                               st.Имя,
                               st.Фамилия,
                               st.Отчество,
                               st.Телефон,
                               st.Серия_паспорта,
                               st.Номер_паспорта,
                           };
            return result;
        }
        protected internal bool CliRedVB(System.Windows.Forms.DataGridView x, decimal numericUpDown1, System.Windows.Forms.TextBox x1,
             System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4, System.Windows.Forms.TextBox x5,
             System.Windows.Forms.TextBox x6)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result;
            try
            {
                result = true;
                Клиенты adv = (from ss in db.Клиенты
                               where ss.Код_клиента == numericUpDown1
                               select ss).Single();

                x1.Text = adv.Имя;
                x2.Text = adv.Фамилия;
                x3.Text = adv.Отчество;
                x4.Text = adv.Телефон.ToString();
                x5.Text = adv.Серия_паспорта.ToString();
                x6.Text = adv.Номер_паспорта.ToString();
            }
            catch (Exception)
            {
                result = false;
            }

            return result;
        }
        protected internal bool CliRed(System.Windows.Forms.DataGridView x, decimal numericUpDown2, System.Windows.Forms.TextBox x1,
            System.Windows.Forms.TextBox x2, System.Windows.Forms.TextBox x3, System.Windows.Forms.TextBox x4, System.Windows.Forms.TextBox x5, System.Windows.Forms.TextBox x6)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result;
            try
            {
                
                Клиенты adv = (from ss in db.Клиенты
                                where ss.Код_клиента == numericUpDown2
                                select ss).Single();

                adv.Имя = x1.Text;
                adv.Фамилия = x2.Text;
                adv.Отчество = x3.Text;
                adv.Телефон = Convert.ToDecimal(x4.Text);
                adv.Серия_паспорта = Convert.ToDecimal(x5.Text);
                adv.Номер_паспорта = Convert.ToDecimal(x6.Text);

                result = true;
                db.SubmitChanges();
                

                x.DataSource = from st in db.Клиенты

                                           select new
                                           {
                                               st.Код_клиента,
                                               st.Имя,
                                               st.Фамилия,
                                               st.Отчество,
                                               st.Телефон,
                                               st.Серия_паспорта,
                                               st.Номер_паспорта,
                                           };
            }
            catch (Exception)
            {
                result = false;
            }

            return result;
        }
        public void CliLoad(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();

            x.DataSource = from st in db.Клиенты

                                                      select new
                                                      {
                                                          st.Код_клиента,
                                                          st.Имя,
                                                          st.Фамилия,
                                                          st.Отчество,
                                                          st.Телефон,
                                                          st.Серия_паспорта,
                                                          st.Номер_паспорта,
                                                      };
        }

    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.Учетные_записи")]
    public partial class Учетные_записи : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private decimal _Код_записи;

        private string _Логин;

        private string _Пароль;

        private System.Nullable<decimal> _Код_адвоката;

        private EntityRef<Адвокаты> _Адвокаты;

        #region Определения метода расширяемости
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnКод_записиChanging(decimal value);
        partial void OnКод_записиChanged();
        partial void OnЛогинChanging(string value);
        partial void OnЛогинChanged();
        partial void OnПарольChanging(string value);
        partial void OnПарольChanged();
        partial void OnКод_адвокатаChanging(System.Nullable<decimal> value);
        partial void OnКод_адвокатаChanged();
        #endregion

        public Учетные_записи()
        {
            this._Адвокаты = default(EntityRef<Адвокаты>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_записи", AutoSync = AutoSync.OnInsert, DbType = "Decimal(7,0) NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public decimal Код_записи
        {
            get
            {
                return this._Код_записи;
            }
            set
            {
                if ((this._Код_записи != value))
                {
                    this.OnКод_записиChanging(value);
                    this.SendPropertyChanging();
                    this._Код_записи = value;
                    this.SendPropertyChanged("Код_записи");
                    this.OnКод_записиChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Логин", DbType = "VarChar(8) NOT NULL", CanBeNull = false)]
        public string Логин
        {
            get
            {
                return this._Логин;
            }
            set
            {
                if ((this._Логин != value))
                {
                    this.OnЛогинChanging(value);
                    this.SendPropertyChanging();
                    this._Логин = value;
                    this.SendPropertyChanged("Логин");
                    this.OnЛогинChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Пароль", DbType = "VarChar(8) NOT NULL", CanBeNull = false)]
        public string Пароль
        {
            get
            {
                return this._Пароль;
            }
            set
            {
                if ((this._Пароль != value))
                {
                    this.OnПарольChanging(value);
                    this.SendPropertyChanging();
                    this._Пароль = value;
                    this.SendPropertyChanged("Пароль");
                    this.OnПарольChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Код_адвоката", DbType = "Decimal(7,0)")]
        public System.Nullable<decimal> Код_адвоката
        {
            get
            {
                return this._Код_адвоката;
            }
            set
            {
                if ((this._Код_адвоката != value))
                {
                    if (this._Адвокаты.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnКод_адвокатаChanging(value);
                    this.SendPropertyChanging();
                    this._Код_адвоката = value;
                    this.SendPropertyChanged("Код_адвоката");
                    this.OnКод_адвокатаChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "Адвокаты_Учетные_записи", Storage = "_Адвокаты", ThisKey = "Код_адвоката", OtherKey = "Код_адвоката", IsForeignKey = true, DeleteRule = "CASCADE")]
        public Адвокаты Адвокаты
        {
            get
            {
                return this._Адвокаты.Entity;
            }
            set
            {
                Адвокаты previousValue = this._Адвокаты.Entity;
                if (((previousValue != value)
                            || (this._Адвокаты.HasLoadedOrAssignedValue == false)))
                {
                    this.SendPropertyChanging();
                    if ((previousValue != null))
                    {
                        this._Адвокаты.Entity = null;
                        previousValue.Учетные_записи.Remove(this);
                    }
                    this._Адвокаты.Entity = value;
                    if ((value != null))
                    {
                        value.Учетные_записи.Add(this);
                        this._Код_адвоката = value.Код_адвоката;
                    }
                    else
                    {
                        this._Код_адвоката = default(Nullable<decimal>);
                    }
                    this.SendPropertyChanged("Адвокаты");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
        protected internal bool Akk(System.Windows.Forms.DataGridView x, decimal numericUpDown2,
            System.Windows.Forms.TextBox x1, System.Windows.Forms.TextBox x2)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result;
            result = true;
            bool chek = true;
            bool vh = false;
            decimal kod = numericUpDown2;
            string login = x1.Text;
            var log = from st in db.Учетные_записи
                      select new
                      {
                          st.Логин,
                          st.Код_адвоката,
                      };
            foreach (var z in log)
            {
                if (kod == z.Код_адвоката && CurrentUser.Value == 0)
                {
                    vh = false;
                    System.Windows.Forms.MessageBox.Show("Для этого адвоката уже создан аккаунт!", "Ошибка!", System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Error); chek = false;
                    break;

                }

                else if (login == z.Логин)
                {
                    vh = false;
                    System.Windows.Forms.MessageBox.Show("Логин уже существует!", "Ошибка!", System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Error); chek = false;
                    break;
                }
                else
                {
                    vh = true;
                }
            }
            if (vh)
            {
                if (x1.Text != "" && x2.Text != "" && numericUpDown2 != 0)
                {
                    Учетные_записи cust = new Учетные_записи
                    {
                        Логин = x1.Text,
                        Пароль = x2.Text,
                        Код_адвоката = numericUpDown2,
                    };
                    db.Учетные_записи.InsertOnSubmit(cust);
                }
                else { System.Windows.Forms.MessageBox.Show("Все поля должны быть заполнены!", "Ошибка!", System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Error); chek = false; }
                try
                {
                    db.SubmitChanges();
                }

                catch (Exception)
                {
                    System.Windows.Forms.MessageBox.Show("Адвокат не найден!", "Ошибка!", System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Error);
                    chek = false;
                }
            }
            x.DataSource = from st in db.Учетные_записи

                           select new
                           {
                               st.Код_записи,
                               st.Логин,
                               st.Пароль,
                               st.Код_адвоката,

                           };
            if (chek)
            {
                System.Windows.Forms.MessageBox.Show("Запись успешно  создана!", "Успех!", System.Windows.Forms.MessageBoxButtons.OK, System.Windows.Forms.MessageBoxIcon.Asterisk);
            }
            return result;

        }
        protected internal bool AkkRedVB(System.Windows.Forms.DataGridView x, decimal numericUpDown1, System.Windows.Forms.TextBox x1)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
           
            bool result;
           
            try
            {
                result = true;
                Учетные_записи adv = (from ss in db.Учетные_записи
                                      where ss.Код_записи == numericUpDown1
                                      select ss).Single();

                x1.Text = adv.Пароль;
              
            }
            catch (Exception)
            {
                result = false;
            }
            return result;
        }
        protected internal bool AkkRed(System.Windows.Forms.DataGridView x, decimal numericUpDown1, System.Windows.Forms.TextBox x1)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result;
            result = true;

            try
            {
                Учетные_записи adv = (from ss in db.Учетные_записи
                                      where ss.Код_записи == numericUpDown1
                                      select ss).Single();


                adv.Пароль = x1.Text;
                db.SubmitChanges();
            }
            catch(Exception)
            {
                result = false;
            }
            x.DataSource = from st in db.Учетные_записи

                                       select new
                                       {
                                           st.Код_записи,
                                           st.Логин,
                                           st.Пароль,
                                           st.Код_адвоката,
                                       };

            
            return result;
        }
        protected internal bool Vhod(System.Windows.Forms.TextBox x, System.Windows.Forms.TextBox x1)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();
            bool result = false;           
            string login = x.Text;
            string password = x1.Text;
            var log = from st in db.Учетные_записи
                      select new
                      {
                          st.Логин,
                          st.Пароль,
                          st.Код_адвоката,

                      };
            foreach (var z in log)
            {
                if (login == z.Логин && password == z.Пароль)
                {
                    result = true;
                   
                    CurrentUser.Value = Convert.ToDecimal(z.Код_адвоката);

                    break;
                }
                else
                {
                    result = false;
                   
                }               
            }  
            return result;            
        }
        public void AkkLoad(System.Windows.Forms.DataGridView x)
        {
            DataClasses1DataContext db = new DataClasses1DataContext();

            x.DataSource = from st in db.Учетные_записи

                                                      select new
                                                      {
                                                          st.Код_записи,
                                                          st.Логин,
                                                          st.Пароль,
                                                          st.Код_адвоката,


                                                      };
        }
    }
}
    

#pragma warning restore 1591
